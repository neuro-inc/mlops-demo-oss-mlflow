kind: live
title: mlops-demo-oss-mlflow

defaults:
  preset: cpu-large
  life_span: 1d

volumes:
  data:
    remote: storage:$[[ flow.project_id ]]/data
    mount: /project/data
    local: data
  code:
    remote: storage:$[[ flow.project_id ]]/code
    mount: /project/code
    local: code
  config:
    remote: storage:$[[ flow.project_id ]]/config
    mount: /project/config
    local: config
  results:
    remote: storage:$[[ flow.project_id ]]/results
    mount: /project/results
    local: results
  mlruns:
    remote: storage:${{ flow.flow_id }}/mlruns
    mount: /usr/local/share/mlruns
  project:
    remote: storage:$[[ flow.project_id ]]
    mount: /project
    local: .

images:
  myimage:
    ref: image:$[[ flow.project_id ]]:latest
    dockerfile: $[[ flow.workspace ]]/Dockerfile
    context: $[[ flow.workspace ]]/
    build_preset: cpu-large

jobs:
  mlflow:
    action: gh:neuro-actions/mlflow@v1.17.0
    args:
      backend_store_uri: sqlite:///${{ volumes.mlruns.mount }}/mlflow.db
      default_artifact_root: ${{ volumes.mlruns.mount }}
      volumes: "${{ to_json( [volumes.mlruns.ref_rw] ) }}"
  train:
    image: $[[ images.myimage.ref ]]
    name: $[[ flow.title ]]-experiment
    pass_config: True
    params:
      n_hidden:
        descr: Number of neurons in the hidden layer
    volumes:
      - $[[ upload(volumes.data).ref_ro ]]
      - $[[ upload(volumes.code).ref_ro ]]
      - $[[ upload(volumes.config).ref_ro ]]
      - $[[ volumes.results.ref_rw ]]
      - $[[ volumes.mlruns.ref_rw ]]
    env:
      EXPOSE_SSH: "yes"
      PYTHONPATH: /usr/project
      PROJECT: /usr/project
      TRAIN_IMAGE_REF: ${{ images.myimage.ref }}
    bash: |
        python -u $[[ volumes.code.mount ]]/train.py \
          --data_path $[[ volumes.data.mount ]] \
          --mlflow_uri http://${{ inspect_job('mlflow').internal_hostname_named }}:5000 \
          --n_hidden ${{ params.n_hidden }}
          
